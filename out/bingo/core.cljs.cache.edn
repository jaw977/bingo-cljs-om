;; Analyzed by ClojureScript 0.0-2657
{:defs {render-card {:protocol-inline nil, :name bingo.core/render-card, :variadic false, :file "src/bingo/core.cljs", :end-column 19, :method-params ([rows toggle]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rows toggle])), :test true}, handle-events {:protocol-inline nil, :name bingo.core/handle-events, :variadic false, :file "src/bingo/core.cljs", :end-column 21, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 2}), :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner])), :test true}, range5 {:file "src/bingo/core.cljs", :line 36, :column 1, :end-line 36, :end-column 13, :test true, :name bingo.core/range5}, bingo-app {:protocol-inline nil, :name bingo.core/bingo-app, :variadic false, :file "src/bingo/core.cljs", :end-column 17, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag bingo.core/t6810, :variadic false, :max-fixed-arity 2}), :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner])), :test true}, bingo-state {:file "src/bingo/core.cljs", :line 55, :column 1, :end-line 55, :end-column 18, :test true, :name bingo.core/bingo-state}, render-cell {:protocol-inline nil, :name bingo.core/render-cell, :variadic false, :file "src/bingo/core.cljs", :end-column 19, :method-params ([cell toggle row col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 57, :end-line 57, :max-fixed-arity 4, :fn-var true, :arglists (quote ([cell toggle row col])), :test true}, ->t6805 {:protocol-inline nil, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name bingo.core/->t6805, :variadic false, :file "src/bingo/core.cljs", :method-params ([owner app bingo-app meta6806]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag bingo.core/t6805, :variadic false, :max-fixed-arity 4}), :line 99, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner app bingo-app meta6806])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, problems {:file "src/bingo/core.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name bingo.core/problems}, t6805 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name bingo.core/t6805, :file "src/bingo/core.cljs", :type true, :anonymous true, :column 3, :line 99, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init-state {:protocol-inline nil, :name bingo.core/init-state, :variadic false, :file "src/bingo/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj, :variadic false, :max-fixed-arity 0}), :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t6810 {:protocol-inline nil, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name bingo.core/->t6810, :variadic false, :file "src/bingo/core.cljs", :method-params ([owner app bingo-app meta6811]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag bingo.core/t6810, :variadic false, :max-fixed-arity 4}), :line 99, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner app bingo-app meta6811])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t6810 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name bingo.core/t6810, :file "src/bingo/core.cljs", :type true, :anonymous true, :column 3, :line 99, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-free-square {:protocol-inline nil, :name bingo.core/add-free-square, :variadic false, :file "src/bingo/core.cljs", :end-column 23, :method-params ([cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 1}), :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cells])), :test true}, is-winner {:protocol-inline nil, :name bingo.core/is-winner, :variadic false, :file "src/bingo/core.cljs", :end-column 17, :method-params ([rows]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rows])), :test true}}, :name bingo.core, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, put! cljs.core.async}, :requires {cljs.core.async cljs.core.async, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :imports nil}