;; Analyzed by ClojureScript 0.0-2657
{:defs {handle-events {:protocol-inline nil, :name bingo.core/handle-events, :variadic false, :file "src/bingo/core.cljs", :end-column 21, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 2}), :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner])), :test true}, ->t12042 {:protocol-inline nil, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name bingo.core/->t12042, :variadic false, :file "src/bingo/core.cljs", :method-params ([owner app bingo-app meta12043]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag bingo.core/t12042, :variadic false, :max-fixed-arity 4}), :line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner app bingo-app meta12043])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, range5 {:file "src/bingo/core.cljs", :line 36, :column 1, :end-line 36, :end-column 13, :test true, :name bingo.core/range5}, bingo-app {:protocol-inline nil, :name bingo.core/bingo-app, :variadic false, :file "src/bingo/core.cljs", :end-column 17, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag bingo.core/t12045, :variadic false, :max-fixed-arity 2}), :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner])), :test true}, bingo-state {:file "src/bingo/core.cljs", :line 55, :column 1, :end-line 55, :end-column 18, :test true, :name bingo.core/bingo-state}, problems {:file "src/bingo/core.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name bingo.core/problems}, render-screen {:protocol-inline nil, :name bingo.core/render-screen, :variadic false, :file "src/bingo/core.cljs", :end-column 21, :method-params ([rows]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rows])), :test true}, init-state {:protocol-inline nil, :name bingo.core/init-state, :variadic false, :file "src/bingo/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj, :variadic false, :max-fixed-arity 0}), :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, channel {:file "src/bingo/core.cljs", :line 57, :column 1, :end-line 57, :end-column 14, :test true, :name bingo.core/channel}, add-free-square {:protocol-inline nil, :name bingo.core/add-free-square, :variadic false, :file "src/bingo/core.cljs", :end-column 23, :method-params ([cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 1}), :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cells])), :test true}, t12045 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name bingo.core/t12045, :file "src/bingo/core.cljs", :type true, :anonymous true, :column 3, :line 97, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t12045 {:protocol-inline nil, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name bingo.core/->t12045, :variadic false, :file "src/bingo/core.cljs", :method-params ([owner app bingo-app meta12046]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag bingo.core/t12045, :variadic false, :max-fixed-arity 4}), :line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner app bingo-app meta12046])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t12042 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name bingo.core/t12042, :file "src/bingo/core.cljs", :type true, :anonymous true, :column 3, :line 97, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, is-winner {:protocol-inline nil, :name bingo.core/is-winner, :variadic false, :file "src/bingo/core.cljs", :end-column 17, :method-params ([rows]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rows])), :test true}}, :name bingo.core, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :requires {cljs.core.async cljs.core.async, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :imports nil}